{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\daegyo_hobby\\\\chatting\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Login from './login'; // Login 컴포넌트를 import합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = (username, password) => {\n    // TODO: 실제 로그인 로직 구현\n    console.log(\"Login attempted with\", username, password);\n    // 여기에 로그인 성공 시 로직을 구현합니다.\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uCC44\\uD305 \\uD398\\uC774\\uC9C0 \\uCEF4\\uD3EC\\uB10C\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) // 로그인 성공 시 보여줄 컴포넌트\n    : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) // 로그인 폼\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","username","password","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["D:/dev/daegyo_hobby/chatting/my-react-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Login from './login'; // Login 컴포넌트를 import합니다.\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = (username, password) => {\n    // TODO: 실제 로그인 로직 구현\n    console.log(\"Login attempted with\", username, password);\n    // 여기에 로그인 성공 시 로직을 구현합니다.\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <div>채팅 페이지 컴포넌트</div> // 로그인 성공 시 보여줄 컴포넌트\n      ) : (\n        <Login onLogin={handleLogin} /> // 로그인 폼\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,EAAEC,QAAQ,CAAC;IACvD;IACAH,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBR,UAAU,gBACTH,OAAA;MAAAW,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;IAAA,eAEvBf,OAAA,CAACF,KAAK;MAACkB,OAAO,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CAnBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}