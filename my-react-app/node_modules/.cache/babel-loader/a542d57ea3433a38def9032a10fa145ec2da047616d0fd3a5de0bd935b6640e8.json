{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\daegyo_hobby\\\\chatting\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Login from './login';\nimport ChatPage from './ChatPage'; // 채팅 페이지 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLoginSuccess = username => {\n    setIsLoggedIn(true);\n    // 추가적인 로그인 성공 처리\n  };\n\n  const handleLoginFail = () => {\n    alert('로그인에 실패하였습니다.');\n    setIsLoggedIn(false);\n    // 추가적인 로그인 실패 처리\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(ChatPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess,\n      onLoginFail: handleLoginFail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","ChatPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLoginSuccess","username","handleLoginFail","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","onLoginFail","_c","$RefreshReg$"],"sources":["D:/dev/daegyo_hobby/chatting/my-react-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Login from './login';\nimport ChatPage from './ChatPage'; // 채팅 페이지 컴포넌트\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLoginSuccess = (username) => {\n    setIsLoggedIn(true);\n    // 추가적인 로그인 성공 처리\n  };\n\n  const handleLoginFail = () => {\n    alert('로그인에 실패하였습니다.');\n    setIsLoggedIn(false);\n    // 추가적인 로그인 실패 처리\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <ChatPage />\n      ) : (\n        <Login onLoginSuccess={handleLoginSuccess} onLoginFail={handleLoginFail} />\n      )}\n    </div>\n  );\n}\n\nexport default App\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,kBAAkB,GAAIC,QAAQ,IAAK;IACvCF,aAAa,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BC,KAAK,CAAC,eAAe,CAAC;IACtBJ,aAAa,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;;EAED,oBACEJ,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBP,UAAU,gBACTH,OAAA,CAACF,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEZd,OAAA,CAACH,KAAK;MAACkB,cAAc,EAAEV,kBAAmB;MAACW,WAAW,EAAET;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC3E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACZ,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}